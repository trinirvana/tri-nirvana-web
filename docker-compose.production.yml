version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: tri-nirvana-app
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - app_logs:/var/log
      - app_uploads:/var/www/public/uploads
    networks:
      - tri-nirvana-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.datadoghq.ad.logs"='[{"source": "nginx", "service": "tri-nirvana"}]'

  redis:
    image: redis:7-alpine
    container_name: tri-nirvana-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - tri-nirvana-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Watchtower for automatic updates (optional)
  watchtower:
    image: containrrr/watchtower
    container_name: tri-nirvana-watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - tri-nirvana-network

volumes:
  app_logs:
    driver: local
  app_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  tri-nirvana-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16